{"swagger":"2.0","info":{"version":"0.3.0","title":"CRUN API","description":"# Introduction\n  CRUN provides a way to execute shell commands remotely via http.\n  Find the source code of this API [here](https://github.com/Proto-Garage/crun).\n### Features\n  * Define shell commands in json format\n  * Define how multiple shell commands are executed with respect to each other\n  * Authorize users to execute a specific list of shell commands\n"},"host":"crun.raise88.com","schemes":["http","https"],"consumes":["application/json"],"produces":["application/json"],"paths":{"/users":{"post":{"tags":["user","create"],"description":"Create new `User` object.\n","parameters":[{"name":"body","in":"body","description":"`User` object.\n","required":true,"schema":{"type":"object","properties":{"username":{"$ref":"#/definitions/username"},"password":{"$ref":"#/definitions/password"},"roles":{"type":"array","items":{"$ref":"#/definitions/id"}}},"required":["username","password"]}}],"responses":{"201":{"description":"`User` object reference.\n","schema":{"type":"object","properties":{"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/users/[a-f\\d]{24}$"},"_id":{"$ref":"#/definitions/id"}}}},"400":{"description":"Invalid request error\n","schema":{"$ref":"#/definitions/Error"}}}},"get":{"tags":["user","find"],"description":"Retrieve `User` objects. `User` objects are sorted based on the `createdAt` field in descending order.\n","parameters":[{"name":"limit","in":"query","description":"Number of `User` objects to return.","type":"integer","default":0,"minimum":0,"maximum":1000},{"name":"skip","in":"query","description":"Number of `User` objects to skip.","type":"integer","default":0,"minimum":0,"maximum":1000},{"name":"fields","in":"query","description":"List for fields to return. (Example) `username,createdAt,roles`\n","type":"string","pattern":"^(username|createdAt|roles)(,(username|createdAt|roles)){0,2}$"}],"responses":{"200":{"description":"List of `User` objects.\n","schema":{"type":"object","properties":{"links":{"type":"object","properties":{"self":{"type":"string","pattern":"^https?:\\/\\/.+\\/users\\?limit=\\d+&skip=\\d+$"},"next":{"type":"string","pattern":"^https?:\\/\\/.+\\/users\\?limit=\\d+&skip=\\d+$"},"last":{"type":"string","pattern":"^https?:\\/\\/.+\\/users\\?limit=\\d+&skip=\\d+$"}},"required":["self","last"]},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"$ref":"#/definitions/id"},"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/users/[a-f\\d]{24}$"},"username":{"$ref":"#/definitions/username"},"createdAt":{"type":"string","format":"date-time"},"roles":{"type":"array","items":{"$ref":"#/definitions/id"}}},"required":["_id","uri"]}}}}}}}},"/users/{userId}":{"get":{"tags":["user","findOne"],"description":"Retrieve a `User` object given a `userId`.\n","parameters":[{"name":"userId","in":"path","description":"User identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"},{"name":"fields","in":"query","description":"List for fields to return. (Example) `username,createdAt,roles`\n","type":"string","pattern":"^(username|createdAt|roles)(,(username|createdAt|roles)){0,2}$"}],"responses":{"200":{"description":"`User` object\n","schema":{"type":"object","properties":{"links":{"type":"object","properties":{"self":{"type":"object","pattern":"^https?:\\/\\/.+\\/users/[a-f\\d]{24}$"}},"required":["self"]},"data":{"type":"object","properties":{"username":{"$ref":"#/definitions/username"},"createdAt":{"type":"string","format":"date-time"},"roles":{"type":"array","items":{"$ref":"#/definitions/id"}}}}},"required":["links","data"]}},"404":{"description":"User not found error\n","schema":{"$ref":"#/definitions/Error"}}}},"delete":{"tags":["user","remove"],"description":"Remove `User` object\n","parameters":[{"name":"userId","in":"path","description":"User identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"}],"responses":{"200":{"description":"OK\n"},"404":{"description":"User not found error\n","schema":{"$ref":"#/definitions/Error"}}}},"patch":{"tags":["user","update"],"description":"Update `User` object\n","parameters":[{"name":"userId","in":"path","description":"User identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"},{"name":"body","in":"body","description":"`User` object.\n","required":true,"schema":{"type":"object","properties":{"roles":{"type":"array","items":{"$ref":"#/definitions/id"}}}}}],"responses":{"200":{"description":"OK\n"},"400":{"description":"Invalid request error\n","schema":{"$ref":"#/definitions/Error"}},"404":{"description":"User not found error\n","schema":{"$ref":"#/definitions/Error"}}}}},"/roles":{"post":{"tags":["role","create"],"description":"Create new `Role` object.\n","parameters":[{"name":"body","in":"body","description":"`Role` object.\n","required":true,"schema":{"type":"object","properties":{"name":{"type":"string"},"permissions":{"type":"array","items":{"$ref":"#/definitions/Permission"}}},"required":["name","permissions"]}}],"responses":{"201":{"description":"`Role` object reference.\n","schema":{"type":"object","properties":{"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/roles/[a-f\\d]{24}$"},"_id":{"$ref":"#/definitions/id"}}}},"400":{"description":"Invalid request error\n","schema":{"$ref":"#/definitions/Error"}}}},"get":{"tags":["role","find"],"description":"Retrieve `Role` objects. `Role` objects are sorted based on the `createdAt` field in descending order.\n","parameters":[{"name":"limit","in":"query","description":"Number of `Role` objects to return.","type":"integer","default":0,"minimum":0,"maximum":1000},{"name":"skip","in":"query","description":"Number of `Role` objects to skip.","type":"integer","default":0,"minimum":0,"maximum":1000},{"name":"fields","in":"query","description":"List for fields to return. (Example) `name,permissions,createdAt`\n","type":"string","pattern":"^(name|permissions|createdAt)(,(name|permissions|createdAt)){0,2}$"}],"responses":{"200":{"description":"List of `Role` objects.\n","schema":{"type":"object","properties":{"links":{"type":"object","properties":{"self":{"type":"string","pattern":"^https?:\\/\\/.+\\/roles\\?limit=\\d+&skip=\\d+$"},"next":{"type":"string","pattern":"^https?:\\/\\/.+\\/roles\\?limit=\\d+&skip=\\d+$"},"last":{"type":"string","pattern":"^https?:\\/\\/.+\\/roles\\?limit=\\d+&skip=\\d+$"}},"required":["self","last"]},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"$ref":"#/definitions/id"},"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/roles/[a-f\\d]{24}$"},"name":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"permissions":{"type":"array","items":{"$ref":"#/definitions/Permission"}}},"required":["_id","uri"]}}}}}}}},"/roles/{roleId}":{"get":{"tags":["role","findOne"],"description":"Retrieve a `Role` object given a `roleId`.\n","parameters":[{"name":"roleId","in":"path","description":"Role identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"},{"name":"fields","in":"query","description":"List for fields to return. (Example) `name,permissions,createdAt`\n","type":"string","pattern":"^(name|permissions|createdAt)(,(name|permissions|createdAt)){0,2}$"}],"responses":{"200":{"description":"`Role` object\n","schema":{"type":"object","properties":{"links":{"type":"object","properties":{"self":{"type":"string","pattern":"^https?:\\/\\/.+\\/roles/[a-f\\d]{24}$"}},"required":["self"]},"data":{"type":"object","properties":{"name":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"permissions":{"type":"array","items":{"$ref":"#/definitions/Permission"}}}}}}},"404":{"description":"Role not found error\n","schema":{"$ref":"#/definitions/Error"}}}},"delete":{"tags":["role","remove"],"description":"Remove `Role` object\n","parameters":[{"name":"roleId","in":"path","description":"Role identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"}],"responses":{"200":{"description":"OK\n"},"404":{"description":"Role not found error\n","schema":{"$ref":"#/definitions/Error"}}}}},"/commands":{"post":{"tags":["command","create"],"description":"Create new `Command` object.\n","parameters":[{"name":"body","in":"body","description":"`Command` object.\n","required":true,"schema":{"type":"object","properties":{"name":{"type":"string"},"command":{"type":"string"},"cwd":{"type":"string"},"env":{"type":"object"},"timeout":{"type":"number","minimum":0},"enabled":{"type":"boolean"}},"required":["name","command"]}}],"responses":{"201":{"description":"`Command` object reference.\n","schema":{"type":"object","properties":{"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/commands/[a-f\\d]{24}$"},"_id":{"$ref":"#/definitions/id"}}}},"400":{"description":"Invalid request error\n","schema":{"$ref":"#/definitions/Error"}}}},"get":{"tags":["command","find"],"description":"Retrieve `Command` objects. `Command` objects are sorted based on the `createdAt` field in descending order.\n","parameters":[{"name":"limit","in":"query","description":"Number of `Command` objects to return.","type":"integer","default":0,"minimum":0,"maximum":1000},{"name":"skip","in":"query","description":"Number of `Command` objects to skip.","type":"integer","default":0,"minimum":0,"maximum":1000},{"name":"fields","in":"query","description":"List for fields to return. (Example) `name,command,cwd,env,timeout,enabled,createdAt`\n","type":"string","pattern":"^(name|command|cwd|env|timeout|enabled|createdAt)(,(name|command|cwd|env|timeout|enabled|createdAt)){0,2}$"}],"responses":{"200":{"description":"List of `Command` objects.\n","schema":{"type":"object","properties":{"links":{"type":"object","properties":{"self":{"type":"string","pattern":"^https?:\\/\\/.+\\/commands\\?limit=\\d+&skip=\\d+$"},"next":{"type":"string","pattern":"^https?:\\/\\/.+\\/commands\\?limit=\\d+&skip=\\d+$"},"last":{"type":"string","pattern":"^https?:\\/\\/.+\\/commands\\?limit=\\d+&skip=\\d+$"}},"required":["self","last"]},"data":{"type":"array","items":{"type":"object","properties":{"_id":{"$ref":"#/definitions/id"},"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/commands/[a-f\\d]{24}$"},"name":{"type":"string"},"command":{"type":"string"},"cwd":{"type":"string"},"env":{"type":"object"},"timeout":{"type":"number","minimum":0},"enabled":{"type":"boolean"},"createdAt":{"type":"string","format":"date-time"}},"required":["_id","uri"]}}}}}}}},"/commands/{commandId}":{"get":{"tags":["command","findOne"],"description":"Retrieve a `Command` object given a `commandId`.\n","parameters":[{"name":"commandId","in":"path","description":"Command identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"},{"name":"fields","in":"query","description":"List for fields to return. (Example) `name,command,cwd,env,timeout,enabled,createdAt`\n","type":"string","pattern":"^(name|command|cwd|env|timeout|enabled|createdAt)(,(name|command|cwd|env|timeout|enabled|createdAt)){0,2}$"}],"responses":{"200":{"description":"`User` object\n","schema":{"type":"object","properties":{"links":{"type":"object","properties":{"self":{"type":"object","pattern":"^https?:\\/\\/.+\\/commands/[a-f\\d]{24}$"}},"required":["self"]},"data":{"type":"object","properties":{"name":{"type":"string"},"command":{"type":"string"},"cwd":{"type":"string"},"env":{"type":"object"},"timeout":{"type":"number","minimum":0},"enabled":{"type":"boolean"},"createdAt":{"type":"string","format":"date-time"}}}},"required":["links","data"]}},"404":{"description":"Command not found error\n","schema":{"$ref":"#/definitions/Error"}}}},"delete":{"tags":["command","remove"],"description":"Remove `User` object\n","parameters":[{"name":"commandId","in":"path","description":"Command identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"}],"responses":{"200":{"description":"OK\n"},"404":{"description":"Command not found error\n","schema":{"$ref":"#/definitions/Error"}}}},"patch":{"tags":["command","update"],"description":"Update `Command` object\n","parameters":[{"name":"commandId","in":"path","description":"Command identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"},{"name":"body","in":"body","description":"`Command` object.\n","required":true,"schema":{"type":"object","properties":{"name":{"type":"string"},"command":{"type":"string"},"cwd":{"type":"string"},"env":{"type":"object"},"timeout":{"type":"number","minimum":0},"enabled":{"type":"boolean"}}}}],"responses":{"200":{"description":"OK\n"},"400":{"description":"Invalid request error\n","schema":{"$ref":"#/definitions/Error"}},"404":{"description":"Command not found error\n","schema":{"$ref":"#/definitions/Error"}}}}},"/groups":{"post":{"tags":["group","create"],"description":"Create new `Group` object.\n","parameters":[{"name":"body","in":"body","description":"`Group` object.\n","required":true,"schema":{"type":"object","properties":{"name":{"type":"string"},"queue":{"type":"string"},"executionType":{"$ref":"#/definitions/executionType"},"enabled":{"type":"boolean"},"members":{"type":"array","items":{"$ref":"#/definitions/Member"}}},"required":["name","queue","members"]}}],"responses":{"201":{"description":"`Group` object reference.\n","schema":{"type":"object","properties":{"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/groups/[a-f\\d]{24}$"},"_id":{"$ref":"#/definitions/id"}}}},"400":{"description":"Invalid request error\n","schema":{"$ref":"#/definitions/Error"}}}},"get":{"tags":["group","find"],"description":"Retrieve `Group` objects. `Group` objects are sorted based on the `createdAt` field in descending order.\n","parameters":[{"name":"limit","in":"query","description":"Number of `Group` objects to return.","type":"integer","default":0,"minimum":0,"maximum":1000},{"name":"skip","in":"query","description":"Number of `Group` objects to skip.","type":"integer","default":0,"minimum":0,"maximum":1000},{"name":"fields","in":"query","description":"List for fields to return. (Example) `name,enabled,executionType,members,queue,createdAt`\n","type":"string","pattern":"^(name|enabled|executionType|members|queue|createdAt)(,(name|enabled|executionType|members|queue|createdAt)){0,2}$"},{"name":"expand","in":"query","description":"Flag to return detailed information of each member of the group.","type":"integer"}],"responses":{"200":{"description":"List of `Group` objects.\n","schema":{"type":"object","properties":{"links":{"type":"object","properties":{"self":{"type":"string","pattern":"^https?:\\/\\/.+\\/groups\\?limit=\\d+&skip=\\d+$"},"next":{"type":"string","pattern":"^https?:\\/\\/.+\\/groups\\?limit=\\d+&skip=\\d+$"},"last":{"type":"string","pattern":"^https?:\\/\\/.+\\/groups\\?limit=\\d+&skip=\\d+$"}},"required":["self","last"]},"data":{"type":"array","items":{"allOf":[{"$ref":"#/definitions/Group"},{"type":"object","properties":{"_id":{"$ref":"#/definitions/id"},"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/groups/[a-f\\d]{24}$"},"members":{"type":"array","items":{"allOf":[{"$ref":"#/definitions/Member"},{"type":"object","properties":{"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/groups/[a-f\\d]{24}$"}},"required":["uri"]}]}}},"required":["_id","uri"]}]}}}}}}}},"/groups/{groupId}":{"get":{"tags":["group","findOne"],"description":"Retrieve a `Group` object given a `groupId`.\n","parameters":[{"name":"groupId","in":"path","description":"Group identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"},{"name":"fields","in":"query","description":"List for fields to return. (Example) `name,enabled,executionType,members,queue,createdAt`\n","type":"string","pattern":"^(name|enabled|executionType|members|queue|createdAt)(,(name|enabled|executionType|members|queue|createdAt)){0,2}$"},{"name":"expand","in":"query","description":"Flag to return detailed information of each member of the group.","type":"integer"}],"responses":{"200":{"description":"`User` object\n","schema":{"type":"object","properties":{"links":{"type":"object","properties":{"self":{"type":"object","pattern":"^https?:\\/\\/.+\\/groups/[a-f\\d]{24}$"}},"required":["self"]},"data":{"allOf":[{"$ref":"#/definitions/Group"},{"type":"object","properties":{"members":{"type":"array","items":{"allOf":[{"$ref":"#/definitions/Member"},{"type":"object","properties":{"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/groups/[a-f\\d]{24}$"}},"required":["uri"]}]}}}}]}},"required":["links","data"]}},"404":{"description":"Group not found error\n","schema":{"$ref":"#/definitions/Error"}}}},"delete":{"tags":["group","remove"],"description":"Remove `Group` object\n","parameters":[{"name":"groupId","in":"path","description":"Group identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"}],"responses":{"200":{"description":"OK\n"},"404":{"description":"Group not found error\n","schema":{"$ref":"#/definitions/Error"}}}},"patch":{"tags":["group","update"],"description":"Update `Group` object\n","parameters":[{"name":"groupId","in":"path","description":"Group identification code","required":true,"type":"string","pattern":"^[a-f\\d]{24}$"},{"name":"body","in":"body","description":"`Group` object.\n","required":true,"schema":{"type":"object","properties":{"name":{"type":"string"},"queue":{"type":"string"},"executionType":{"$ref":"#/definitions/executionType"},"enabled":{"type":"boolean"},"members":{"type":"array","items":{"$ref":"#/definitions/Member"}}}}}],"responses":{"200":{"description":"OK\n"},"400":{"description":"Invalid request error\n","schema":{"$ref":"#/definitions/Error"}},"404":{"description":"Group not found error\n","schema":{"$ref":"#/definitions/Error"}}}}},"/executions":{"post":{"tags":["execution","create"],"description":"Create an `Execution` object given a `groupId`.\n","parameters":[{"name":"body","in":"body","description":"`Execution` object.\n","required":true,"schema":{"type":"object","properties":{"group":{"$ref":"#/definitions/id"}},"required":["group"]}}],"responses":{"201":{"description":"`Execution` object reference.\n","schema":{"type":"object","properties":{"uri":{"type":"string","pattern":"^https?:\\/\\/.+\\/executions/[a-f\\d]{24}$"},"_id":{"$ref":"#/definitions/id"}}}},"400":{"description":"Invalid request error\n","schema":{"$ref":"#/definitions/Error"}}}}}},"definitions":{"id":{"type":"string","pattern":"^[a-f\\d]{24}$"},"username":{"type":"string","pattern":"^[A-Za-z0-9_]{1,32}$"},"password":{"type":"string","pattern":"^([^ ]+){8,32}$"},"executionType":{"type":"string","enum":["series","parallel"]},"Error":{"type":"object","properties":{"code":{"type":"string","enum":["INVALID_REQUEST","UNAUTHORIZED","TOKEN_EXPIRED","FORBIDDEN","NOT_FOUND","INVALID_ROLE_OPERATION"]},"message":{"type":"string"}},"required":["code","message"]},"Permission":{"type":"object","properties":{"operation":{"type":"string","enum":["CREATE_USER","CREATE_COMMAND","CREATE_GROUP","CREATE_ROLE","EXECUTE_GROUP"]},"scope":{"type":"object"}},"required":["operation"]},"Member":{"type":"object","properties":{"type":{"type":"string","enum":["command","group"]},"_id":{"$ref":"#/definitions/id"}},"required":["type","_id"]},"Group":{"type":"object","properties":{"name":{"type":"string"},"queue":{"type":"string"},"executionType":{"$ref":"#/definitions/executionType"},"enabled":{"type":"boolean"},"createdAt":{"type":"string","format":"date-time"},"members":{"type":"array","items":{"type":"object"}}}}}}
