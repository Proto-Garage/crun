swagger: '2.0'
info:
  version: 0.3.0
  title: CRUN API
  description: |
    ### Introduction
      CRUN provides a way to execute shell commands remotely via http.
      Find the source code of this API [here](https://github.com/Proto-Garage/crun).

    ### Features
      * Define shell commands in json format
      * Define how multiple shell commands are executed with respect to each other
      * Authorize users to execute a specific list of shell commands

    ### Security
    #### Basic
      [Basic access authentication](https://tools.ietf.org/html/rfc2617).
    #### Access token
      The `access` token can be generated by the `POST /authenticate` or `POST /refreshToken` endpoints.
      `Access` tokens are only valid for 10 minutes. Use of an expired `access` token will result to a response
      with `401` status code and with error code `TOKEN_EXPIRED`.

      To authorize a request using an `access` token, the `authorization` header must be set as follows:
      ```http
      Authorization: Access {accessToken}
      ```
    #### API token
      The `API` token is an authorization token that does not expire unless explicitly invalidated. The `API` token
      can be generated by the `POST /tokens` or `POST /users/{userId}/tokens` endpoints.

      To authorize a request using an `API` token, the `authorization` header must be set as follows:
      ```http
      Authorization: API {token}
      ```
host: api.crun.io
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /authenticate:
    post:
      tags:
        - security
      description: Generate `Access` token.
      parameters:
        - name: body
          in: body
          description: |
            `Credentials`.
          required: true
          schema:
            $ref: '#/definitions/Credential'
      responses:
        200:
          description: |
            `Access` token.
          schema:
            type: object
            properties:
              refreshToken:
                $ref: '#/definitions/jwt'
              accessToken:
                $ref: '#/definitions/jwt'
            required:
              - refreshToken
              - accessToken
          examples:
            application/json:
              refreshToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ0eXBlIjoicmVmcmVzaCIsImlzcyI6IkNSVU4iLCJqdGkiOiIyZjFhYWQ4ZC1iYjRjLTRjYTMtYjY4OC0zZTc5YTJiNTIzYjgiLCJ1c2VyIjoiNTg4OTliMjIyYzFjNTcyNzQ0YmNkYTg2IiwiaWF0IjoxNDg1NDEzMTU1LCJleHAiOjE0ODgwMDUxNTV9.sXu39UMkshKfcfl8tJL6gh_ED025PJRfawtDRkWw0Pcsc7YpgzT6dUGWEA7-HfRos7QALa7ezze6_sS02KHpTw
              accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ0eXBlIjoiYWNjZXNzIiwiaXNzIjoiQ1JVTiIsInVzZXIiOiI1ODg5OWIyMjJjMWM1NzI3NDRiY2RhODYiLCJpYXQiOjE0ODU0MTMxNTUsImV4cCI6MTQ4NTQxMzc1NX0.ygSanYORIzlLF7U9q31NfpyZV759nIz0sa0ZsW9lhp9imcpwfXNJ06FD-HPR3h2gpjnlyez6K_OG91Nt-V503A
        401:
          description: |
            Invalid credentials error
          schema:
            $ref: '#/definitions/Error'
  /refreshToken:
    post:
      tags:
        - security
      description: Generate `Access` token.
      parameters:
        - name: body
          in: body
          description: |
            `Refresh` token.
          required: true
          schema:
            type: object
            properties:
              refreshToken:
                $ref: '#/definitions/jwt'
            required:
              - refreshToken
      responses:
        200:
          description: |
            `Access` token.
          schema:
            type: object
            properties:
              accessToken:
                $ref: '#/definitions/jwt'
            required:
              - accessToken
          examples:
            application/json:
              accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ0eXBlIjoiYWNjZXNzIiwiaXNzIjoiQ1JVTiIsInVzZXIiOiI1ODg5OWIyMjJjMWM1NzI3NDRiY2RhODYiLCJpYXQiOjE0ODU0MTMxNTUsImV4cCI6MTQ4NTQxMzc1NX0.ygSanYORIzlLF7U9q31NfpyZV759nIz0sa0ZsW9lhp9imcpwfXNJ06FD-HPR3h2gpjnlyez6K_OG91Nt-V503A
        400:
          description: |
            Invalid credentials error
          schema:
            $ref: '#/definitions/Error'
  /tokens:
    post:
      tags:
        - token
      description: Create new `Token` object.
      responses:
        201:
          description: |
            `Token` object.
          schema:
            type: object
            properties:
              uri:
                type: string
                pattern: ^https?:\/\/.+\/users/[a-f\d]{24}$
              _id:
                $ref: '#/definitions/id'
              token:
                $ref: '#/definitions/token'
            required:
              - uri
              - _id
              - token
          examples:
            application/json:
              uri: https://api.crun.io/tokens/58899c6a3a1ae8280664e172
              _id: 58899c6a3a1ae8280664e172
              token: efedb20487f7286dc11c8a1e6527fa6b
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - token
      description: |
        Retrieve `Token` objects. `Token` objects are sorted based on the `createdAt` field in descending order.
      parameters:
        - name: limit
          in: query
          description: Number of `User` objects to return.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: skip
          in: query
          description: Number of `User` objects to skip.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `creator,owner,token,createdAt`
          type: string
          pattern: ^(creator|owner|token|createdAt)(,(creator|owner|token|createdAt)){0,2}$
      responses:
        200:
          description: |
            List of `Token` objects.
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: string
                    pattern: ^https?:\/\/.+\/tokens\?limit=\d+&skip=\d+$
                  next:
                    type: string
                    pattern: ^https?:\/\/.+\/tokens\?limit=\d+&skip=\d+$
                  last:
                    type: string
                    pattern: ^https?:\/\/.+\/tokens\?limit=\d+&skip=\d+$
                required:
                  - self
                  - last
              data:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      $ref: '#/definitions/id'
                    uri:
                      type: string
                      pattern: ^https?:\/\/.+\/tokens/[a-f\d]{24}$
                    creator:
                      $ref: '#/definitions/id'
                    owner:
                      $ref: '#/definitions/id'
                    token:
                      $ref: '#/definitions/token'
                    createdAt:
                      type: string
                      format: date-time
                  required:
                    - _id
                    - uri
          examples:
            application/json:
              links:
                self: https://api.crun.io/tokens?limit=10&skip=0
                last: https://api.crun.io/tokens?limit=6&skip=10
                next: https://api.crun.io/tokens?limit=10&skip=10
              data:
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d84
                createdAt: '2017-01-26T06:57:23.711Z'
                token: de0cc195b702961da72b8140d41f70da
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d84
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d85
                createdAt: '2017-01-26T06:57:23.711Z'
                token: 31c67a7870a34722934eafd426556f7a
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d85
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d86
                createdAt: '2017-01-26T06:57:23.711Z'
                token: 168767ca7953610812bc74b36129701c
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d86
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d87
                createdAt: '2017-01-26T06:57:23.711Z'
                token: 17f75e8beec00bdb000d6b4e7f22fc6b
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d87
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d88
                createdAt: '2017-01-26T06:57:23.711Z'
                token: 5ba6024ad80dbfb630d475f8c029715a
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d88
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d7b
                createdAt: '2017-01-26T06:57:23.710Z'
                token: 904ba65c2dd83adad816e86e667ae11e
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d7b
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d7c
                createdAt: '2017-01-26T06:57:23.710Z'
                token: 3ef44cfd1e0eb151fc9d52a2b7b05839
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d7c
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d7d
                createdAt: '2017-01-26T06:57:23.710Z'
                token: b945d9f44fb251b0f3384b10bfb53e6f
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d7d
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d7e
                createdAt: '2017-01-26T06:57:23.710Z'
                token: f976ce2e92f4911920cdaddc456076a4
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d7e
              - owner: 58899dd10b28ed293b368d76
                creator: 58899dd10b28ed293b368d76
                _id: 58899dd30b28ed293b368d7f
                createdAt: '2017-01-26T06:57:23.710Z'
                token: c82bee345a16a68a4521da9845526d41
                _uri: https://api.crun.io/tokens/58899dd30b28ed293b368d7f
  /tokens/{tokenId}:
    get:
      tags:
        - token
      description: |
        Retrieve a `Token` object given a `tokenId`.
      parameters:
        - name: tokenId
          in: path
          description: Token identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `creator,owner,token,createdAt`
          type: string
          pattern: ^(creator|owner|token|createdAt)(,(creator|owner|token|createdAt)){0,2}$
      responses:
        200:
          description: |
            `Token` object
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: object
                    pattern: ^https?:\/\/.+\/tokens/[a-f\d]{24}$
                required:
                  - self
              data:
                type: object
                properties:
                  creator:
                    $ref: '#/definitions/id'
                  owner:
                    $ref: '#/definitions/id'
                  token:
                    $ref: '#/definitions/token'
                  createdAt:
                    type: string
                    format: date-time
            required:
              - links
              - data
          examples:
            application/json:
              links:
                self: https://api.crun.io/tokens/58899dd20b28ed293b368d78
              data:
                creator: 58899dd10b28ed293b368d76
                owner: 58899dd10b28ed293b368d76
                createdAt: '2017-01-26T06:57:22.652Z'
                token: 92b6ca4b68759be052293f4cc8dd8406
        404:
          description: |
            User not found error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - token
      description: |
        Remove `Token` object
      parameters:
        - name: tokenId
          in: path
          description: Token identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
      responses:
        200:
          description: |
            OK
        404:
          description: |
            Token not found error
          schema:
            $ref: '#/definitions/Error'
  /users/{userId}/tokens:
    post:
      tags:
        - token
      description: Create new `Token` object.
      responses:
        201:
          description: |
            `Token` object.
          parameters:
            - name: userId
              in: path
              description: User identification code
              required: true
              type: string
              pattern: ^[a-f\d]{24}$
          schema:
            type: object
            properties:
              uri:
                type: string
                pattern: ^https?:\/\/.+\/users/[a-f\d]{24}$
              _id:
                $ref: '#/definitions/id'
              token:
                $ref: '#/definitions/token'
            required:
              - uri
              - _id
              - token
          examples:
            application/json:
              uri: https://api.crun.io/tokens/58899c6a3a1ae8280664e172
              _id: 58899c6a3a1ae8280664e172
              token: efedb20487f7286dc11c8a1e6527fa6b
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
  /users:
    post:
      tags:
        - user
      description: Create new `User` object.
      parameters:
        - name: body
          in: body
          description: |
            `User` object.
          required: true
          schema:
            allOf:
              - type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/definitions/id'
              - $ref: '#/definitions/Credential'
      responses:
        201:
          description: |
            `User` object reference.
          schema:
            type: object
            properties:
              uri:
                type: string
                pattern: ^https?:\/\/.+\/users/[a-f\d]{24}$
              _id:
                $ref: '#/definitions/id'
          examples:
            application/json:
              uri: https://api.crun.io/users/58899ef6cb817b29e17f80d5
              _id: 58899ef6cb817b29e17f80d5
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - user
      description: |
        Retrieve `User` objects. `User` objects are sorted based on the `createdAt` field in descending order.
      parameters:
        - name: limit
          in: query
          description: Number of `User` objects to return.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: skip
          in: query
          description: Number of `User` objects to skip.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `username,createdAt,roles`
          type: string
          pattern: ^(username|createdAt|roles)(,(username|createdAt|roles)){0,2}$
      responses:
        200:
          description: |
            List of `User` objects.
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: string
                    pattern: ^https?:\/\/.+\/users\?limit=\d+&skip=\d+$
                  next:
                    type: string
                    pattern: ^https?:\/\/.+\/users\?limit=\d+&skip=\d+$
                  last:
                    type: string
                    pattern: ^https?:\/\/.+\/users\?limit=\d+&skip=\d+$
                required:
                  - self
                  - last
              data:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      $ref: '#/definitions/id'
                    uri:
                      type: string
                      pattern: ^https?:\/\/.+\/users/[a-f\d]{24}$
                    username:
                      $ref: '#/definitions/username'
                    createdAt:
                      type: string
                      format: date-time
                    roles:
                      type: array
                      items:
                        $ref: '#/definitions/id'
                  required:
                    - _id
                    - uri
          examples:
            application/json:
              links:
                self: https://api.crun.io/commands?limit=10&skip=0
                last: https://api.crun.io/commands?limit=2&skip=10
                next: https://api.crun.io/commands?limit=10&skip=10
              data:
              - username: users_5M2WzV
                _id: 58899f00cb817b29e17f80e4
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.281Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80e4
              - username: users_s4f0gS
                _id: 58899f00cb817b29e17f80e1
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.280Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80e1
              - username: users_jFiIIH
                _id: 58899f00cb817b29e17f80e2
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.280Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80e2
              - username: users_8vZWiF
                _id: 58899f00cb817b29e17f80e3
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.280Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80e3
              - username: users_oMDCDT
                _id: 58899f00cb817b29e17f80df
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.279Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80df
              - username: users_2XWZ6e
                _id: 58899f00cb817b29e17f80e0
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.279Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80e0
              - username: users_dxj98o
                _id: 58899f00cb817b29e17f80dc
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.277Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80dc
              - username: users_lyFvET
                _id: 58899f00cb817b29e17f80dd
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.277Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80dd
              - username: users_vemgRH
                _id: 58899f00cb817b29e17f80de
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.277Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80de
              - username: users_ZbWjrI
                _id: 58899f00cb817b29e17f80db
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:24.273Z'
                uri: https://api.crun.io/users/58899f00cb817b29e17f80db
  /users/{userId}:
    get:
      tags:
        - user
      description: |
        Retrieve a `User` object given a `userId`.
      parameters:
        - name: userId
          in: path
          description: User identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `username,createdAt,roles`
          type: string
          pattern: ^(username|createdAt|roles)(,(username|createdAt|roles)){0,2}$
      responses:
        200:
          description: |
            `User` object
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: object
                    pattern: ^https?:\/\/.+\/users/[a-f\d]{24}$
                required:
                  - self
              data:
                type: object
                properties:
                  username:
                    $ref: '#/definitions/username'
                  createdAt:
                    type: string
                    format: date-time
                  roles:
                    type: array
                    items:
                      $ref: '#/definitions/id'
            required:
              - links
              - data
          examples:
            application/json:
              links:
                self: https://api.crun.io/users/58899ef9cb817b29e17f80d9
              data:
                username: users_Z4Rlbn
                roles:
                  - 58899f7d20549f2a10127f10
                  - 58899f8cd051d32a189fddbb
                createdAt: '2017-01-26T07:02:17.957Z'
        404:
          description: |
            User not found error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - user
      description: |
        Remove `User` object
      parameters:
        - name: userId
          in: path
          description: User identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
      responses:
        200:
          description: |
            OK
        404:
          description: |
            User not found error
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - user
      description: |
        Update `User` object
      parameters:
        - name: userId
          in: path
          description: User identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: body
          in: body
          description: |
            `User` object.
          required: true
          schema:
            type: object
            properties:
              roles:
                type: array
                items:
                  $ref: '#/definitions/id'
      responses:
        200:
          description: |
            OK
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            User not found error
          schema:
            $ref: '#/definitions/Error'
  /roles:
    post:
      tags:
        - role
      description: |
        Create new `Role` object.
      parameters:
        - name: body
          in: body
          description: |
            `Role` object.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              permissions:
                type: array
                items:
                  $ref: '#/definitions/Permission'
            required:
              - name
              - permissions
      responses:
        201:
          description: |
            `Role` object reference.
          schema:
            type: object
            properties:
              uri:
                type: string
                pattern: ^https?:\/\/.+\/roles/[a-f\d]{24}$
              _id:
                $ref: '#/definitions/id'
          examples:
            application/json:
              uri: https://api.crun.io/roles/5889a1039ed2782ad29e556c
              _id: 5889a1039ed2782ad29e556c
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - role
      description: |
        Retrieve `Role` objects. `Role` objects are sorted based on the `createdAt` field in descending order.
      parameters:
        - name: limit
          in: query
          description: Number of `Role` objects to return.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: skip
          in: query
          description: Number of `Role` objects to skip.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `name,permissions,createdAt`
          type: string
          pattern: ^(name|permissions|createdAt)(,(name|permissions|createdAt)){0,2}$
      responses:
        200:
          description: |
            List of `Role` objects.
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: string
                    pattern: ^https?:\/\/.+\/roles\?limit=\d+&skip=\d+$
                  next:
                    type: string
                    pattern: ^https?:\/\/.+\/roles\?limit=\d+&skip=\d+$
                  last:
                    type: string
                    pattern: ^https?:\/\/.+\/roles\?limit=\d+&skip=\d+$
                required:
                  - self
                  - last
              data:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      $ref: '#/definitions/id'
                    uri:
                      type: string
                      pattern: ^https?:\/\/.+\/roles/[a-f\d]{24}$
                    name:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    permissions:
                      type: array
                      items:
                        $ref: '#/definitions/Permission'
                  required:
                    - _id
                    - uri
          examples:
            application/json:
              links:
                self: https://api.crun.io/roles?limit=10&skip=0
                last: https://api.crun.io/roles?limit=3&skip=0
              data:
              - name: test
                _id: 5889a1059ed2782ad29e556f
                createdAt: '2017-01-26T07:11:01.427Z'
                permissions:
                - operation: CREATE_COMMAND
                - operation: CREATE_GROUP
                uri: https://api.crun.io/roles/5889a1059ed2782ad29e556f
              - name: superman
                _id: 5889a1049ed2782ad29e556e
                createdAt: '2017-01-26T07:11:00.929Z'
                permissions:
                - operation: CREATE_COMMAND
                  scope:
                    command: 5889a1049ed2782ad29e556d
                uri: https://api.crun.io/roles/5889a1049ed2782ad29e556e
              - name: staging
                _id: 5889a1039ed2782ad29e556c
                createdAt: '2017-01-26T07:10:59.926Z'
                permissions:
                - operation: CREATE_COMMAND
                uri: https://api.crun.io/roles/5889a1039ed2782ad29e556c
  /roles/{roleId}:
    get:
      tags:
        - role
      description: |
        Retrieve a `Role` object given a `roleId`.
      parameters:
        - name: roleId
          in: path
          description: Role identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `name,permissions,createdAt`
          type: string
          pattern: ^(name|permissions|createdAt)(,(name|permissions|createdAt)){0,2}$
      responses:
        200:
          description: |
            `Role` object
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: string
                    pattern: ^https?:\/\/.+\/roles/[a-f\d]{24}$
                required:
                  - self
              data:
                type: object
                properties:
                  name:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  permissions:
                    type: array
                    items:
                      $ref: '#/definitions/Permission'
          examples:
            application/json:
              links:
                self: https://api.crun.io/roles/5889a1059ed2782ad29e556f
              data:
                name: test
                createdAt: '2017-01-26T07:11:01.427Z'
                permissions:
                - operation: CREATE_COMMAND
                - operation: CREATE_GROUP
        404:
          description: |
            Role not found error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - role
      description: |
        Remove `Role` object
      parameters:
        - name: roleId
          in: path
          description: Role identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
      responses:
        200:
          description: |
            OK
        404:
          description: |
            Role not found error
          schema:
            $ref: '#/definitions/Error'
  /commands:
    post:
      tags:
        - command
      description: |
        Create new `Command` object.
      parameters:
        - name: body
          in: body
          description: |
            `Command` object.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              command:
                type: string
              cwd:
                type: string
              env:
                type: object
              timeout:
                type: number
                minimum: 0
              enabled:
                type: boolean
            required:
              - name
              - command
      responses:
        201:
          description: |
            `Command` object reference.
          schema:
            type: object
            properties:
              uri:
                type: string
                pattern: ^https?:\/\/.+\/commands/[a-f\d]{24}$
              _id:
                $ref: '#/definitions/id'
          examples:
            application/json:
              uri: https://api.crun.io/commands/5889a27d1764c42b8ed440cb
              _id: 5889a27d1764c42b8ed440cb
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
       - command
      description: |
        Retrieve `Command` objects. `Command` objects are sorted based on the `createdAt` field in descending order.
      parameters:
        - name: limit
          in: query
          description: Number of `Command` objects to return.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: skip
          in: query
          description: Number of `Command` objects to skip.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `name,command,cwd,env,timeout,enabled,createdAt`
          type: string
          pattern: ^(name|command|cwd|env|timeout|enabled|createdAt)(,(name|command|cwd|env|timeout|enabled|createdAt)){0,2}$
      responses:
        200:
          description: |
            List of `Command` objects.
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: string
                    pattern: ^https?:\/\/.+\/commands\?limit=\d+&skip=\d+$
                  next:
                    type: string
                    pattern: ^https?:\/\/.+\/commands\?limit=\d+&skip=\d+$
                  last:
                    type: string
                    pattern: ^https?:\/\/.+\/commands\?limit=\d+&skip=\d+$
                required:
                  - self
                  - last
              data:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      $ref: '#/definitions/id'
                    uri:
                      type: string
                      pattern: ^https?:\/\/.+\/commands/[a-f\d]{24}$
                    name:
                      type: string
                    command:
                      type: string
                    cwd:
                      type: string
                    env:
                      type: object
                    timeout:
                      type: number
                      minimum: 0
                    enabled:
                      type: boolean
                    createdAt:
                      type: string
                      format: date-time
                  required:
                    - _id
                    - uri
          examples:
            application/json:
              links:
                self: https://api.crun.io/commands?limit=10&skip=0
                last: https://api.crun.io/commands?limit=0&skip=0
              data:
              - name: test_1
                command: sleep 2
                _id: 5889a2871764c42b8ed440e0
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.727Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440e0
              - name: test_14
                command: sleep 2
                _id: 5889a2871764c42b8ed440df
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.723Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440df
              - name: test_13
                command: sleep 2
                _id: 5889a2871764c42b8ed440dd
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.695Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440dd
              - name: test_19
                command: sleep 2
                _id: 5889a2871764c42b8ed440de
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.695Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440de
              - name: test_8
                command: sleep 2
                _id: 5889a2871764c42b8ed440db
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.693Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440db
              - name: test_7
                command: sleep 2
                _id: 5889a2871764c42b8ed440dc
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.693Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440dc
              - name: test_9
                command: sleep 2
                _id: 5889a2871764c42b8ed440d8
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.692Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440d8
              - name: test_15
                command: sleep 2
                _id: 5889a2871764c42b8ed440d9
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.692Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440d9
              - name: test_2
                command: sleep 2
                _id: 5889a2871764c42b8ed440da
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.692Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440da
              - name: test_16
                command: sleep 2
                _id: 5889a2871764c42b8ed440d6
                timeout: 180000
                createdAt: '2017-01-26T07:17:27.691Z'
                enabled: true
                uri: https://api.crun.io/commands/5889a2871764c42b8ed440d6
  /commands/{commandId}:
    get:
      tags:
        - command
      description: |
        Retrieve a `Command` object given a `commandId`.
      parameters:
        - name: commandId
          in: path
          description: Command identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `name,command,cwd,env,timeout,enabled,createdAt`
          type: string
          pattern: ^(name|command|cwd|env|timeout|enabled|createdAt)(,(name|command|cwd|env|timeout|enabled|createdAt)){0,2}$
      responses:
        200:
          description: |
            `User` object
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: object
                    pattern: ^https?:\/\/.+\/commands/[a-f\d]{24}$
                required:
                  - self
              data:
                type: object
                properties:
                  name:
                    type: string
                  command:
                    type: string
                  cwd:
                    type: string
                  env:
                    type: object
                  timeout:
                    type: number
                    minimum: 0
                  enabled:
                    type: boolean
                  createdAt:
                    type: string
                    format: date-time
            required:
              - links
              - data
          examples:
            application/json:
              links:
                self: https://api.crun.io/commands/5889a2881764c42b8ed440e1
              data:
                name: sleepy
                command: sleep 2
                timeout: 180000
                createdAt: '2017-01-26T07:17:28.813Z'
                enabled: true
        404:
          description: |
            Command not found error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - command
      description: |
        Remove `User` object
      parameters:
        - name: commandId
          in: path
          description: Command identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
      responses:
        200:
          description: |
            OK
        404:
          description: |
            Command not found error
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - command
      description: |
        Update `Command` object
      parameters:
        - name: commandId
          in: path
          description: Command identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: body
          in: body
          description: |
            `Command` object.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              command:
                type: string
              cwd:
                type: string
              env:
                type: object
              timeout:
                type: number
                minimum: 0
              enabled:
                type: boolean
      responses:
        200:
          description: |
            OK
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Command not found error
          schema:
            $ref: '#/definitions/Error'
  /groups:
    post:
      tags:
        - group
      description: |
        Create new `Group` object.
      parameters:
        - name: body
          in: body
          description: |
            `Group` object.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              queue:
                type: string
              executionType:
                $ref: '#/definitions/executionType'
              enabled:
                type: boolean
              members:
                type: array
                items:
                  $ref: '#/definitions/Member'
            required:
              - name
              - queue
              - members
      responses:
        201:
          description: |
            `Group` object reference.
          schema:
            type: object
            properties:
              uri:
                type: string
                pattern: ^https?:\/\/.+\/groups/[a-f\d]{24}$
              _id:
                $ref: '#/definitions/id'
          examples:
            application/json:
              uri: https://api.crun.io/groups/5889a414ece0512cb51c0d4a
              _id: 5889a414ece0512cb51c0d4a
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - group
      description: |
        Retrieve `Group` objects. `Group` objects are sorted based on the `createdAt` field in descending order.
      parameters:
        - name: limit
          in: query
          description: Number of `Group` objects to return.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: skip
          in: query
          description: Number of `Group` objects to skip.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `name,enabled,executionType,members,queue,createdAt`
          type: string
          pattern: ^(name|enabled|executionType|members|queue|createdAt)(,(name|enabled|executionType|members|queue|createdAt)){0,2}$
        - name: expand
          in: query
          description: Flag to return detailed information of each member of the group.
          type: integer
      responses:
        200:
          description: |
            List of `Group` objects.
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: string
                    pattern: ^https?:\/\/.+\/groups\?limit=\d+&skip=\d+$
                  next:
                    type: string
                    pattern: ^https?:\/\/.+\/groups\?limit=\d+&skip=\d+$
                  last:
                    type: string
                    pattern: ^https?:\/\/.+\/groups\?limit=\d+&skip=\d+$
                required:
                  - self
                  - last
              data:
                type: array
                items:
                  allOf:
                    - $ref: '#/definitions/Group'
                    - type: object
                      properties:
                        _id:
                          $ref: '#/definitions/id'
                        uri:
                          type: string
                          pattern: ^https?:\/\/.+\/groups/[a-f\d]{24}$
                        members:
                          type: array
                          items:
                            allOf:
                              - $ref: '#/definitions/Member'
                              - type: object
                                properties:
                                  uri:
                                    type: string
                                    pattern: ^https?:\/\/.+\/groups/[a-f\d]{24}$
                                required:
                                  - uri
                      required:
                        - _id
                        - uri
          examples:
            application/json:
              links:
                self: https://api.crun.io/groups?limit=10&skip=0
                last: https://api.crun.io/groups?limit=5&skip=10
                next: https://api.crun.io/groups?limit=10&skip=10
              data:
              - name: group cyH8w6hiWelV
                queue: test
                _id: 5889a428ece0512cb51c0d89
                createdAt: '2017-01-26T07:24:24.210Z'
                members:
                - type: command
                  _id: 5889a41eece0512cb51c0d61
                  _uri: https://api.crun.io/commands/5889a41eece0512cb51c0d61
                - type: group
                  _id: 5889a427ece0512cb51c0d86
                  _uri: https://api.crun.io/groups/5889a427ece0512cb51c0d86
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a428ece0512cb51c0d89
              - name: group wuDfK9JKaNPf
                queue: test
                _id: 5889a427ece0512cb51c0d86
                createdAt: '2017-01-26T07:24:23.693Z'
                members:
                - type: command
                  _id: 5889a41eece0512cb51c0d62
                  _uri: https://api.crun.io/commands/5889a41eece0512cb51c0d62
                executionType: parallel
                enabled: true
                _uri: https://api.crun.io/groups/5889a427ece0512cb51c0d86
              - name: group pA8o82IyVvms
                queue: test
                _id: 5889a427ece0512cb51c0d84
                createdAt: '2017-01-26T07:24:23.216Z'
                members:
                - type: command
                  _id: 5889a420ece0512cb51c0d68
                  _uri: https://api.crun.io/commands/5889a420ece0512cb51c0d68
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a427ece0512cb51c0d84
              - name: group yoL90xChncTQ
                queue: test
                _id: 5889a427ece0512cb51c0d83
                createdAt: '2017-01-26T07:24:23.215Z'
                members:
                - type: command
                  _id: 5889a420ece0512cb51c0d6a
                  _uri: https://api.crun.io/commands/5889a420ece0512cb51c0d6a
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a427ece0512cb51c0d83
              - name: group jAhfRVcG1iL7
                queue: test
                _id: 5889a427ece0512cb51c0d82
                createdAt: '2017-01-26T07:24:23.214Z'
                members:
                - type: command
                  _id: 5889a420ece0512cb51c0d69
                  _uri: https://api.crun.io/commands/5889a420ece0512cb51c0d69
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a427ece0512cb51c0d82
              - name: group PZ4G8EgToiZf
                queue: test
                _id: 5889a425ece0512cb51c0d7d
                createdAt: '2017-01-26T07:24:21.760Z'
                members:
                - type: command
                  _id: 5889a420ece0512cb51c0d66
                  _uri: https://api.crun.io/commands/5889a420ece0512cb51c0d66
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a425ece0512cb51c0d7d
              - name: group a7Rz5uXqG3l5
                queue: test
                _id: 5889a425ece0512cb51c0d7e
                createdAt: '2017-01-26T07:24:21.760Z'
                members:
                - type: command
                  _id: 5889a420ece0512cb51c0d67
                  _uri: https://api.crun.io/commands/5889a420ece0512cb51c0d67
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a425ece0512cb51c0d7e
              - name: group h6OzH1OgmQLH
                queue: test
                _id: 5889a425ece0512cb51c0d7c
                createdAt: '2017-01-26T07:24:21.759Z'
                members:
                - type: command
                  _id: 5889a41eece0512cb51c0d65
                  _uri: https://api.crun.io/commands/5889a41eece0512cb51c0d65
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a425ece0512cb51c0d7c
              - name: group F0IOckopiM7y
                queue: test
                _id: 5889a425ece0512cb51c0d7b
                createdAt: '2017-01-26T07:24:21.758Z'
                members:
                - type: command
                  _id: 5889a41eece0512cb51c0d64
                  _uri: https://api.crun.io/commands/5889a41eece0512cb51c0d64
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a425ece0512cb51c0d7b
              - name: group IlLKc2nNRdoO
                queue: test
                _id: 5889a425ece0512cb51c0d7a
                createdAt: '2017-01-26T07:24:21.757Z'
                members:
                - type: command
                  _id: 5889a41eece0512cb51c0d63
                  _uri: https://api.crun.io/commands/5889a41eece0512cb51c0d63
                executionType: series
                enabled: true
                _uri: https://api.crun.io/groups/5889a425ece0512cb51c0d7a
  /groups/{groupId}:
    get:
      tags:
        - group
      description: |
        Retrieve a `Group` object given a `groupId`.
      parameters:
        - name: groupId
          in: path
          description: Group identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `name,enabled,executionType,members,queue,createdAt`
          type: string
          pattern: ^(name|enabled|executionType|members|queue|createdAt)(,(name|enabled|executionType|members|queue|createdAt)){0,2}$
        - name: expand
          in: query
          description: Flag to return detailed information of each member of the group.
          type: integer
      responses:
        200:
          description: |
            `User` object
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: object
                    pattern: ^https?:\/\/.+\/groups/[a-f\d]{24}$
                required:
                  - self
              data:
                allOf:
                  - $ref: '#/definitions/Group'
                  - type: object
                    properties:
                      members:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/definitions/Member'
                            - type: object
                              properties:
                                uri:
                                  type: string
                                  pattern: ^https?:\/\/.+\/groups/[a-f\d]{24}$
                              required:
                                - uri
            required:
              - links
              - data
          examples:
            application/json:
              links:
                self: https://api.crun.io/groups/5889a4c843c4c02d40a4a2a3
              data:
                name: group 6iw0mRPsvXBQ
                queue: test
                createdAt: '2017-01-26T07:27:04.267Z'
                members:
                - type: command
                  _id: 5889a4c743c4c02d40a4a29e
                  _uri: https://api.crun.io/commands/5889a4c743c4c02d40a4a29e
                - type: group
                  _id: 5889a4c743c4c02d40a4a2a0
                  _uri: https://api.crun.io/groups/5889a4c743c4c02d40a4a2a0
                executionType: series
                enabled: true
        404:
          description: |
            Group not found error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - group
      description: |
        Remove `Group` object
      parameters:
        - name: groupId
          in: path
          description: Group identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
      responses:
        200:
          description: |
            OK
        404:
          description: |
            Group not found error
          schema:
            $ref: '#/definitions/Error'
    patch:
      tags:
        - group
      description: |
        Update `Group` object
      parameters:
        - name: groupId
          in: path
          description: Group identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: body
          in: body
          description: |
            `Group` object.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              queue:
                type: string
              executionType:
                $ref: '#/definitions/executionType'
              enabled:
                type: boolean
              members:
                type: array
                items:
                  $ref: '#/definitions/Member'
      responses:
        200:
          description: |
            OK
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Group not found error
          schema:
            $ref: '#/definitions/Error'
  /executions:
    post:
      tags:
        - execution
      description: |
        Create an `Execution` object given a `groupId`.
      parameters:
        - name: body
          in: body
          description: |
            `Execution` object.
          required: true
          schema:
            type: object
            properties:
              group:
                $ref: '#/definitions/id'
            required:
              - group
      responses:
        201:
          description: |
            `Execution` object reference.
          schema:
            type: object
            properties:
              uri:
                type: string
                pattern: ^https?:\/\/.+\/executions/[a-f\d]{24}$
              _id:
                $ref: '#/definitions/id'
          examples:
            application/json:
              uri: https://api.crun.io/executions/5889a65cec075c2f195ea9f6
              _id: 5889a65cec075c2f195ea9f6
        400:
          description: |
            Invalid request error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - execution
      description: |
        Retrieve `Execution` objects. `Execution` objects are sorted based on the `createdAt` field in descending order.
      parameters:
        - name: limit
          in: query
          description: Number of `Execution` objects to return.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: skip
          in: query
          description: Number of `Execution` objects to skip.
          type: integer
          default: 0
          minimum: 0
          maximum: 1000
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `status,createdAt`
          type: string
          pattern: ^(status|createdAt)(,(status|createdAt)){0,2}$
      responses:
        200:
          description: |
            List of `Execution` objects.
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: string
                    pattern: ^https?:\/\/.+\/executions\?limit=\d+&skip=\d+$
                  next:
                    type: string
                    pattern: ^https?:\/\/.+\/executions\?limit=\d+&skip=\d+$
                  last:
                    type: string
                    pattern: ^https?:\/\/.+\/executions\?limit=\d+&skip=\d+$
                required:
                  - self
                  - last
              data:
                type: array
                items:
                  type: object
                  properties:
                    createdAt:
                      type: string
                      format: date-time
                    status:
                      $ref: '#/definitions/Status'
            required:
              - links
              - data
          examples:
            application/json:
              links:
                self: https://api.crun.io/executions?limit=10&skip=0
                last: https://api.crun.io/executions?limit=6&skip=0
              data:
              - _id: 5889a670ec075c2f195eaa07
                createdAt: '2017-01-26T07:34:08.037Z'
                status:
                  status: SUCCEEDED
                  startedAt: '2017-01-26T07:34:08.046Z'
                  elapsedTime: 4061
                  _id: 5889a66bec075c2f195eaa05
                  type: group
                  members:
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:34:08.051Z'
                    elapsedTime: 2027
                    _id: 5889a66bec075c2f195eaa02
                    type: group
                    members:
                    - status: SUCCEEDED
                      startedAt: '2017-01-26T07:34:08.062Z'
                      elapsedTime: 2006
                      _id: 5889a665ec075c2f195ea9fa
                      type: command
                      log: https://api.crun.io/logs/e68dd746-fd08-4d06-95ba-73a58eb05753
                    - status: SUCCEEDED
                      startedAt: '2017-01-26T07:34:08.067Z'
                      elapsedTime: 2009
                      _id: 5889a665ec075c2f195ea9fa
                      type: command
                      log: https://api.crun.io/logs/7b433a99-7a2e-4f8e-81b8-804519ab27f5
                    - status: SUCCEEDED
                      startedAt: '2017-01-26T07:34:08.070Z'
                      elapsedTime: 2008
                      _id: 5889a665ec075c2f195ea9fa
                      type: command
                      log: https://api.crun.io/logs/c45a589e-bb4f-493e-b46f-eff96066c1f7
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:34:10.080Z'
                    elapsedTime: 2026
                    _id: 5889a665ec075c2f195ea9fa
                    type: command
                    log: https://api.crun.io/logs/48d4c232-6bfa-4775-b037-57ed9644ba98
                uri: https://api.crun.io/executions/5889a670ec075c2f195eaa07
              - _id: 5889a66cec075c2f195eaa06
                createdAt: '2017-01-26T07:34:04.413Z'
                status:
                  status: SUCCEEDED
                  startedAt: '2017-01-26T07:34:04.420Z'
                  elapsedTime: 2037
                  _id: 5889a66bec075c2f195eaa02
                  type: group
                  members:
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:34:04.434Z'
                    elapsedTime: 2006
                    _id: 5889a665ec075c2f195ea9fa
                    type: command
                    log: https://api.crun.io/logs/2ce81ab9-14a7-4cee-a170-2fdbb53702cb
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:34:04.443Z'
                    elapsedTime: 2010
                    _id: 5889a665ec075c2f195ea9fa
                    type: command
                    log: https://api.crun.io/logs/4189ef0e-38a8-46a7-95f8-de5f919ceaa3
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:34:04.448Z'
                    elapsedTime: 2009
                    _id: 5889a665ec075c2f195ea9fa
                    type: command
                    log: https://api.crun.io/logs/e857f67f-8ffe-402b-9de3-45f92b864f42
                uri: https://api.crun.io/executions/5889a66cec075c2f195eaa06
              - _id: 5889a666ec075c2f195ea9fd
                createdAt: '2017-01-26T07:33:58.460Z'
                status:
                  status: SUCCEEDED
                  startedAt: '2017-01-26T07:33:58.472Z'
                  elapsedTime: 2021
                  _id: 5889a665ec075c2f195ea9fc
                  type: group
                  members:
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:33:58.479Z'
                    elapsedTime: 2014
                    _id: 5889a665ec075c2f195ea9fa
                    type: command
                    log: https://api.crun.io/logs/de92c35a-bbc5-4e93-8bce-931a5dbe42a4
                uri: https://api.crun.io/executions/5889a666ec075c2f195ea9fd
              - _id: 5889a660ec075c2f195ea9f8
                createdAt: '2017-01-26T07:33:52.352Z'
                status:
                  status: SUCCEEDED
                  startedAt: '2017-01-26T07:33:53.375Z'
                  elapsedTime: 2008
                  _id: 5889a65bec075c2f195ea9f5
                  type: group
                  members:
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:33:53.378Z'
                    elapsedTime: 2005
                    _id: 5889a65bec075c2f195ea9f3
                    type: command
                    log: https://api.crun.io/logs/da797186-d337-4071-ac3d-b6188e65b1f2
                uri: https://api.crun.io/executions/5889a660ec075c2f195ea9f8
              - _id: 5889a65fec075c2f195ea9f7
                createdAt: '2017-01-26T07:33:51.361Z'
                status:
                  status: SUCCEEDED
                  startedAt: '2017-01-26T07:33:51.365Z'
                  elapsedTime: 2009
                  _id: 5889a65bec075c2f195ea9f5
                  type: group
                  members:
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:33:51.368Z'
                    elapsedTime: 2006
                    _id: 5889a65bec075c2f195ea9f3
                    type: command
                    log: https://api.crun.io/logs/87694207-f9bd-4dcd-9a38-d797c1d042e4
                uri: https://api.crun.io/executions/5889a65fec075c2f195ea9f7
              - _id: 5889a65cec075c2f195ea9f6
                createdAt: '2017-01-26T07:33:48.310Z'
                status:
                  status: SUCCEEDED
                  startedAt: '2017-01-26T07:33:48.347Z'
                  elapsedTime: 2017
                  _id: 5889a65bec075c2f195ea9f5
                  type: group
                  members:
                  - status: SUCCEEDED
                    startedAt: '2017-01-26T07:33:48.356Z'
                    elapsedTime: 2007
                    _id: 5889a65bec075c2f195ea9f3
                    type: command
                    log: https://api.crun.io/logs/9eb579fa-c655-463e-8c62-7801cc9927c9
                uri: https://api.crun.io/executions/5889a65cec075c2f195ea9f6
  /executions/{executionId}:
    get:
      tags:
        - execution
      description: |
        Retrieve an `Execution` object given an `executionId`.
      parameters:
        - name: executionId
          in: path
          description: Execution identification code
          required: true
          type: string
          pattern: ^[a-f\d]{24}$
        - name: fields
          in: query
          description: |
            List for fields to return. (Example) `status,createdAt`
          type: string
          pattern: ^(status|createdAt)(,(status|createdAt)){0,2}$
      responses:
        200:
          description: |
            `Execution` object
          schema:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: object
                    pattern: ^https?:\/\/.+\/executions/[a-f\d]{24}$
                required:
                  - self
              data:
                type: object
                properties:
                  createdAt:
                    type: string
                    format: date-time
                  status:
                    $ref: '#/definitions/Status'
            required:
              - links
              - data
          examples:
            application/json:
              links:
                self: https://api.crun.io/execution/5889a66cec075c2f195eaa06
              data:
                createdAt: '2017-01-26T07:34:04.413Z'
                status:
                  status: STARTED
                  startedAt: '2017-01-26T07:34:04.420Z'
                  elapsedTime: 560
                  _id: 5889a66bec075c2f195eaa02
                  type: group
                  members:
                  - status: STARTED
                    startedAt: '2017-01-26T07:34:04.434Z'
                    elapsedTime: 546
                    _id: 5889a665ec075c2f195ea9fa
                    type: command
                    log: https://api.crun.io/logs/2ce81ab9-14a7-4cee-a170-2fdbb53702cb
                  - status: STARTED
                    startedAt: '2017-01-26T07:34:04.443Z'
                    elapsedTime: 537
                    _id: 5889a665ec075c2f195ea9fa
                    type: command
                    log: https://api.crun.io/logs/4189ef0e-38a8-46a7-95f8-de5f919ceaa3
                  - status: STARTED
                    startedAt: '2017-01-26T07:34:04.448Z'
                    elapsedTime: 532
                    _id: 5889a665ec075c2f195ea9fa
                    type: command
                    log: https://api.crun.io/logs/e857f67f-8ffe-402b-9de3-45f92b864f42
        404:
          description: |
            Execution not found error
          schema:
            $ref: '#/definitions/Error'
  /logs/{logId}:
    get:
      tags:
        - log
      description: |
        Retrieve log data given a `logId`.
      parameters:
        - name: logId
          in: path
          description: Log identification code. `UUID`
          required: true
          type: string
          pattern: ^https?:\/\/.+\/logs\/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$
      responses:
        200:
          description: |
            `Log` data
          schema:
            type: string
        404:
          description: |
            Log not found error
          schema:
            $ref: '#/definitions/Error'
definitions:
  id:
    type: string
    pattern: ^[a-f\d]{24}$
  username:
    type: string
    pattern: ^[A-Za-z0-9_]{1,32}$
  password:
    type: string
    pattern: ^([^ ]+){8,32}$
  executionType:
    type: string
    enum:
      - series
      - parallel
  jwt:
    type: string
    pattern: ^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.?[A-Za-z0-9-_]*$
  token:
    type: string
    pattern: ^[a-f0-9]{32}$
  Credential:
    type: object
    properties:
      username:
        $ref: '#/definitions/username'
      password:
        $ref: '#/definitions/password'
    required:
      - username
      - password
  Error:
    type: object
    properties:
      code:
        type: string
        enum:
          - INVALID_REQUEST
          - UNAUTHORIZED
          - TOKEN_EXPIRED
          - FORBIDDEN
          - NOT_FOUND
          - INVALID_ROLE_OPERATION
      message:
        type: string
    required:
      - code
      - message
  Permission:
    type: object
    properties:
      operation:
        type: string
        enum:
          - CREATE_USER
          - CREATE_COMMAND
          - CREATE_GROUP
          - CREATE_ROLE
          - EXECUTE_GROUP
      scope:
        type: object
    required:
      - operation
  Member:
    type: object
    properties:
      type:
        type: string
        enum:
          - command
          - group
      _id:
        $ref: '#/definitions/id'
    required:
      - type
      - _id
  Group:
    type: object
    properties:
      name:
        type: string
      queue:
        type: string
      executionType:
        $ref: '#/definitions/executionType'
      enabled:
        type: boolean
      createdAt:
        type: string
        format: date-time
      members:
        type: array
        items:
          type: object
  Status:
    type: object
    properties:
      status:
        type: string
        enum:
          - QUEUED
          - PENDING
          - STARTED
          - FAILED
          - SUCCEEDED
      startedAt:
        type: string
        format: date-time
      elapsedTime:
        type: number
        minimum: 0
      _id:
        $ref: '#/definitions/id'
      type:
        type: string
        enum:
          - command
          - group
      log:
        type: string
        pattern: ^https?:\/\/.+\/logs\/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$
      members:
        type: array
        items:
          $ref: '#/definitions/Status'
    required:
      - status
      - startedAt
      - elapsedTime
      - _id
      - type
